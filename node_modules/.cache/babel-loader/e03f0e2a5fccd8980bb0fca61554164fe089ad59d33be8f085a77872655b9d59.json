{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\WebstormProjects\\\\Router_Demo\\\\src\\\\home\\\\blog\\\\EditBlog.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Field, Form, Formik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateBlogs, getBlogs } from \"../../services/blogService\";\nimport { useEffect, useState } from \"react\";\nimport customAxios from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditBlog() {\n  _s();\n  console.log(1);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const user = useSelector(state => {\n    return state.user.user;\n  });\n  const userId = user.message.token[\"idUser\"];\n\n  // Lấy thông tin blog từ Redux store\n  const blog = useSelector(state => {\n    return state.blog.currentBlog;\n  });\n  const [edit, setEdit] = useState();\n  useEffect(id => {\n    customAxios(`/trades/${id}`).then(res => {\n      console.log(res);\n    });\n  });\n  const handleUpdate = values => {\n    dispatch(updateBlogs(blog.id, values)).then(res => {\n      dispatch(getBlogs()).then(() => {\n        navigate(\"/home\");\n      });\n    });\n  };\n\n  // Kiểm tra xem blog đã được tải từ Redux store hay chưa\n\n  return (\n    /*#__PURE__*/\n    // <div className={\"row\"}>\n    //     <div className={\"col-12\"}>\n    //         <h1>Edit Blog</h1>\n    //         <Formik initialValues={{\n    //\n    //             }}\n    //             onSubmit={(values) => {\n    //                 handleUpdate(values);\n    //             }}>\n    //             <Form>\n    //                 <div className=\"offset-3 col-6\">\n    //                     <div className=\"form-group\">\n    //                         <label htmlFor=\"exampleInputPassword1\">Name</label>\n    //                         <Field type=\"text\" className={\"form-control\"} name={\"name\"} placeholder={\"Name\"}/>\n    //                     </div>\n    //                     <div className=\"form-group\">\n    //                         <label htmlFor=\"exampleInputPassword1\">Date</label>\n    //                         <Field type=\"date\" className={\"form-control\"} name={\"date\"} placeholder={\"Date\"}/>\n    //                     </div>\n    //                     <div className=\"form-group\">\n    //                         <label htmlFor=\"exampleInputPassword1\">Amount</label>\n    //                         <Field type=\"text\" className={\"form-control\"} name={\"amount\"} placeholder={\"Amount\"}/>\n    //                     </div>\n    //                     <div className=\"form-group\">\n    //                         <label htmlFor=\"exampleInputPassword1\">Type</label>\n    //                         <Field type=\"text\" className={\"form-control\"} name={\"type\"} placeholder={\"Type\"}/>\n    //                     </div>\n    //                     <div className=\"form-group\">\n    //                         <label htmlFor=\"exampleInputPassword1\">Trade Type</label>\n    //                         <Field type=\"text\" className={\"form-control\"} name={\"tradeType\"} placeholder={\"tradeType\"}/>\n    //                     </div>\n    //\n    //                     <button type=\"submit\" className=\"btn btn-primary\">\n    //                         Update\n    //                     </button>\n    //                 </div>\n    //             </Form>\n    //         </Formik>\n    //     </div>\n    // </div>\n    _jsxDEV(\"h1\", {\n      children: \"123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(EditBlog, \"V7jML7+I//H7Z6RY+619myOzAmM=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector, useSelector];\n});\n_c = EditBlog;\nvar _c;\n$RefreshReg$(_c, \"EditBlog\");","map":{"version":3,"names":["Link","useNavigate","useParams","Field","Form","Formik","useDispatch","useSelector","updateBlogs","getBlogs","useEffect","useState","customAxios","EditBlog","console","log","dispatch","navigate","id","user","state","userId","message","token","blog","currentBlog","edit","setEdit","then","res","handleUpdate","values"],"sources":["C:/Users/Admin/WebstormProjects/Router_Demo/src/home/blog/EditBlog.js"],"sourcesContent":["import {Link, useNavigate, useParams} from \"react-router-dom\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateBlogs, getBlogs } from \"../../services/blogService\";\r\nimport {useEffect, useState} from \"react\";\r\nimport customAxios from \"../../services/api\";\r\n\r\nexport default function EditBlog() {\r\n    console.log(1)\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const {id} = useParams()\r\n    const user = useSelector((state) => {\r\n        return state.user.user;\r\n    });\r\n    const userId = user.message.token[\"idUser\"];\r\n\r\n    // Lấy thông tin blog từ Redux store\r\n    const blog = useSelector((state) => {\r\n        return state.blog.currentBlog;\r\n    });\r\n    const [edit , setEdit] = useState()\r\n    useEffect((id)=>{\r\n        customAxios(`/trades/${id}`).then((res)=>{\r\n            console.log(res)\r\n            }\r\n\r\n        )\r\n    })\r\n\r\n    const handleUpdate = (values) => {\r\n        dispatch(updateBlogs(blog.id, values)).then((res) => {\r\n            dispatch(getBlogs()).then(() => {\r\n                navigate(\"/home\");\r\n            });\r\n        });\r\n    };\r\n\r\n    // Kiểm tra xem blog đã được tải từ Redux store hay chưa\r\n\r\n\r\n    return (\r\n        // <div className={\"row\"}>\r\n        //     <div className={\"col-12\"}>\r\n        //         <h1>Edit Blog</h1>\r\n        //         <Formik initialValues={{\r\n        //\r\n        //             }}\r\n        //             onSubmit={(values) => {\r\n        //                 handleUpdate(values);\r\n        //             }}>\r\n        //             <Form>\r\n        //                 <div className=\"offset-3 col-6\">\r\n        //                     <div className=\"form-group\">\r\n        //                         <label htmlFor=\"exampleInputPassword1\">Name</label>\r\n        //                         <Field type=\"text\" className={\"form-control\"} name={\"name\"} placeholder={\"Name\"}/>\r\n        //                     </div>\r\n        //                     <div className=\"form-group\">\r\n        //                         <label htmlFor=\"exampleInputPassword1\">Date</label>\r\n        //                         <Field type=\"date\" className={\"form-control\"} name={\"date\"} placeholder={\"Date\"}/>\r\n        //                     </div>\r\n        //                     <div className=\"form-group\">\r\n        //                         <label htmlFor=\"exampleInputPassword1\">Amount</label>\r\n        //                         <Field type=\"text\" className={\"form-control\"} name={\"amount\"} placeholder={\"Amount\"}/>\r\n        //                     </div>\r\n        //                     <div className=\"form-group\">\r\n        //                         <label htmlFor=\"exampleInputPassword1\">Type</label>\r\n        //                         <Field type=\"text\" className={\"form-control\"} name={\"type\"} placeholder={\"Type\"}/>\r\n        //                     </div>\r\n        //                     <div className=\"form-group\">\r\n        //                         <label htmlFor=\"exampleInputPassword1\">Trade Type</label>\r\n        //                         <Field type=\"text\" className={\"form-control\"} name={\"tradeType\"} placeholder={\"tradeType\"}/>\r\n        //                     </div>\r\n        //\r\n        //                     <button type=\"submit\" className=\"btn btn-primary\">\r\n        //                         Update\r\n        //                     </button>\r\n        //                 </div>\r\n        //             </Form>\r\n        //         </Formik>\r\n        //     </div>\r\n        // </div>\r\n        <h1>123</h1>\r\n    );\r\n}"],"mappings":";;AAAA,SAAQA,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAO,kBAAkB;AAC7D,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,4BAA4B;AAClE,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,WAAW,MAAM,oBAAoB;AAAC;AAE7C,eAAe,SAASC,QAAQ,GAAG;EAAA;EAC/BC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EACd,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,QAAQ,GAAGhB,WAAW,EAAE;EAC9B,MAAM;IAACiB;EAAE,CAAC,GAAGhB,SAAS,EAAE;EACxB,MAAMiB,IAAI,GAAGZ,WAAW,CAAEa,KAAK,IAAK;IAChC,OAAOA,KAAK,CAACD,IAAI,CAACA,IAAI;EAC1B,CAAC,CAAC;EACF,MAAME,MAAM,GAAGF,IAAI,CAACG,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAC;;EAE3C;EACA,MAAMC,IAAI,GAAGjB,WAAW,CAAEa,KAAK,IAAK;IAChC,OAAOA,KAAK,CAACI,IAAI,CAACC,WAAW;EACjC,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGhB,QAAQ,EAAE;EACnCD,SAAS,CAAEQ,EAAE,IAAG;IACZN,WAAW,CAAE,WAAUM,EAAG,EAAC,CAAC,CAACU,IAAI,CAAEC,GAAG,IAAG;MACrCf,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC;IAChB,CAAC,CAEJ;EACL,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC7Bf,QAAQ,CAACR,WAAW,CAACgB,IAAI,CAACN,EAAE,EAAEa,MAAM,CAAC,CAAC,CAACH,IAAI,CAAEC,GAAG,IAAK;MACjDb,QAAQ,CAACP,QAAQ,EAAE,CAAC,CAACmB,IAAI,CAAC,MAAM;QAC5BX,QAAQ,CAAC,OAAO,CAAC;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EAED;;EAGA;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAY;AAEpB;AAAC,GA7EuBJ,QAAQ;EAAA,QAEXP,WAAW,EACXL,WAAW,EACfC,SAAS,EACTK,WAAW,EAMXA,WAAW;AAAA;AAAA,KAXJM,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}